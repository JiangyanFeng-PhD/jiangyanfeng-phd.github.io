<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GPU | Jiangyan Feng</title>
    <link>/tags/gpu/</link>
      <atom:link href="/tags/gpu/index.xml" rel="self" type="application/rss+xml" />
    <description>GPU</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Jiangyan Feng Â© 2020</copyright><lastBuildDate>Wed, 25 Dec 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/jiangyanfeng</url>
      <title>GPU</title>
      <link>/tags/gpu/</link>
    </image>
    
    <item>
      <title>Optimization of Neural Network Convolution Layer through Parallel Programming</title>
      <link>/project/parallel_programming/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/project/parallel_programming/</guid>
      <description>&lt;p&gt;We employed parallel programming optimization approaches for designing and implementing an optimized neural network convolution layer.&lt;/p&gt;
&lt;p&gt;There are four major optimizations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kernel fusion.&lt;/li&gt;
&lt;li&gt;Optimizing grid and block dimensions.&lt;/li&gt;
&lt;li&gt;Unrolling the for loop using restrict and pragma unroll.&lt;/li&gt;
&lt;li&gt;Optimizing tile width for tiled matrix multiplication.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
